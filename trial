import { useState } from "react";

const questions = [
  {
    question: "✈️ How often do you travel by plane?",
    options: ["Never", "1-2 times/year", "Often"],
    scores: [0, 2, 4],
  },
  {
    question: "🍖 How much meat do you eat per week?",
    options: ["None", "1-3 times", "Daily"],
    scores: [0, 2, 4],
  },
  {
    question: "🚍 Do you use public transport?",
    options: ["Yes", "Sometimes", "No"],
    scores: [0, 1, 3],
  },
  {
    question: "🛍️ How often do you buy new clothes?",
    options: ["Rarely", "Every month", "Every week"],
    scores: [0, 2, 4],
  },
  {
    question: "💡 Do you use energy-efficient appliances?",
    options: ["Yes", "Somewhat", "No"],
    scores: [0, 1, 3],
  },
];

const getAdvice = (score: number) => {
  if (score <= 5) return "🌱 Great job! Keep living sustainably!";
  if (score <= 10) return "🌿 You’re doing okay. Try reducing meat or traveling less.";
  return "🌍 Let’s work on lowering your footprint! Start with small daily changes.";
};

const speak = (text: string) => {
  const utterance = new SpeechSynthesisUtterance(text);
  utterance.rate = 1;
  utterance.pitch = 1;
  utterance.lang = "en-US";
  window.speechSynthesis.speak(utterance);
};

export default function App() {
  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState<number[]>([]);
  const [score, setScore] = useState<number | null>(null);
  const [result, setResult] = useState<string>("");

  const handleSelect = (index: number) => {
    const newAnswers = [...answers];
    newAnswers[step] = questions[step].scores[index];
    setAnswers(newAnswers);
    if (step < questions.length - 1) {
      setStep(step + 1);
    } else {
      const totalScore = newAnswers.reduce((a, b) => a + b, 0);
      const advice = getAdvice(totalScore);
      setScore(totalScore);
      setResult(advice);
      speak(advice); // Read result aloud
    }
  };

  const reset = () => {
    setStep(0);
    setAnswers([]);
    setScore(null);
    setResult("");
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-green-100 px-4">
      <h1 className="text-4xl font-bold mb-6 text-green-800">🌿 EcoWise</h1>
      {score === null ? (
        <div className="bg-white p-6 rounded-xl shadow-md w-full max-w-md">
          <p className="text-lg font-medium mb-4">{questions[step].question}</p>
          <div className="space-y-3">
            {questions[step].options.map((opt, i) => (
              <button
                key={i}
                onClick={() => handleSelect(i)}
                className="w-full py-2 px-4 bg-green-600 hover:bg-green-700 text-white rounded-lg"
              >
                {opt}
              </button>
            ))}
          </div>
        </div>
      ) : (
        <div className="bg-white p-6 rounded-xl shadow-md w-full max-w-md text-center">
          <h2 className="text-2xl font-semibold text-green-700 mb-4">Your Score: {score}</h2>
          <p className="text-lg mb-4">{result}</p>
          <button
            onClick={reset}
            className="py-2 px-6 bg-green-600 hover:bg-green-700 text-white rounded-lg"
          >
            Try Again
          </button>
        </div>
      )}
      <footer className="mt-6 text-sm text-green-800">
        Built with 💚 on Bolt.new
      </footer>
    </div>
  );
}
